alt = 0:50:40000;
[T, a, P, rho] = atmoscoesa(alt);
alt_scaled = alt / 40000;

%CREATEFITS(ALTSCALED,T,LOGP)
%  Create fits.
%
%  Data for 'tempfit' fit:
%      X Input : altscaled
%      Y Output: T
%  Data for 'pressurefit' fit:
%      X Input : altscaled
%      Y Output: logP
%  Output:
%      fitresult : a cell-array of fit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 08-Nov-2019 14:16:43

%% Initialization.

% Initialize arrays to store fits and goodness-of-fit.
fitresult = cell( 2, 1 );
gof = struct( 'sse', cell( 2, 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );

%% Fit: 'tempfit'.
[xData, yData] = prepareCurveData( altscaled, T );

% Set up fittype and options.
ft = fittype( 'poly6' );

% Fit model to data.
[fitresult{1}, gof(1)] = fit( xData, yData, ft );

% Plot fit with data.
figure( 'Name', 'tempfit' );
h = plot( fitresult{1}, xData, yData );
legend( h, 'T vs. altscaled', 'tempfit', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'altscaled', 'Interpreter', 'none' );
ylabel( 'T', 'Interpreter', 'none' );
grid on

disp("Temperature");
fitresult{1}
fprintf("p1 = %.6e\n",fitresult{1}.p1);
fprintf("p2 = %.6e\n",fitresult{1}.p2);
fprintf("p3 = %.6e\n",fitresult{1}.p3);
fprintf("p4 = %.6e\n",fitresult{1}.p4);
fprintf("p5 = %.6e\n",fitresult{1}.p5);
fprintf("p6 = %.6e\n",fitresult{1}.p6);
fprintf("p7 = %.6e\n",fitresult{1}.p7);

%% Fit: 'pressurefit'.
[xData, yData] = prepareCurveData( altscaled, logP );

% Set up fittype and options.
ft = fittype( 'poly4' );

% Fit model to data.
[fitresult{2}, gof(2)] = fit( xData, yData, ft );

% Plot fit with data.
figure( 'Name', 'pressurefit' );
h = plot( fitresult{2}, xData, yData );
legend( h, 'logP vs. altscaled', 'pressurefit', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'altscaled', 'Interpreter', 'none' );
ylabel( 'logP', 'Interpreter', 'none' );
grid on

disp("Pressure");
fitresult{2}
fprintf("p1 = %.6e\n",fitresult{2}.p1);
fprintf("p2 = %.6e\n",fitresult{2}.p2);
fprintf("p3 = %.6e\n",fitresult{2}.p3);
fprintf("p4 = %.6e\n",fitresult{2}.p4);
fprintf("p5 = %.6e\n",fitresult{2}.p5);
